name: Run build

on:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    outputs:
      version: ${{ steps.properties.outputs.version }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/checkout@v3

      # For docker layer caching.
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          # Use custom dagger engine with buildkit.
          # SEE: https://github.com/dagger/dagger/pkgs/container/engine/110943658?tag=v0.6.4
          driver-opts: |
            image=ghcr.io/dagger/engine:v0.6.4

      # Enable build cache
      - name: Cache Build caches
        uses: actions/cache@v3
        with:
          path: build/cache
          key: ${{ runner.os }}-${{ matrix.target }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-

      - name: Install deps
        run: |
          yarn install --frozen-lockfile
        working-directory: ./build
      - name: Set BUILDKIT_HOST env
        run: |
          # SEE: https://github.com/dagger/dagger/blob/v0.6.4/core/docs/d7yxc-operator_manual.md?plain=1#L89
          echo "_EXPERIMENTAL_DAGGER_RUNNER_HOST=docker-container://${{ steps.buildx.outputs.name }}" >> $GITHUB_ENV
      - name: Run Dagger pipeline
        run: |
          yarn build -t ${{ matrix.target }}
        working-directory: ./build
      - name: Check buildx cache
        run: |
          # TODO: Check custom buildkit configuration.
          # ls -alh /tmp/.buildx-cache
      - name: Export properties
        id: properties
        run: |
          VERSION="$(cat ./dist/${{ matrix.target }}/version.txt)"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-${{ matrix.target }}-${{steps.properties.outputs.version}}
          path: |
            dist